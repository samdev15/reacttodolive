{"version":3,"sources":["images/todo.png","Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","items","setItems","toggleBtn","setToggleBtn","editItemData","setEditItemData","addItem","map","element","id","console","log","name","allInputData","Date","getTime","toString","useEffect","localStorage","setItem","JSON","stringify","className","src","Img","alt","type","placeholder","value","onChange","e","target","onClick","updateItem","find","current","editItem","index","updateitem","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,MAA0B,iC,OCiG1BA,EA9FF,WAET,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEMC,EAAU,WACZ,GAAIR,IAAcI,EAEdD,EAASD,EAAMO,KAAI,SAACC,GAChB,OAAIA,EAAQC,KAAOL,EAAaK,IAC5BC,QAAQC,IAAIb,GACL,2BAAKU,GAAZ,IAAqBI,KAAMd,KAGpBU,MAIfH,EAAgB,MAChBN,EAAa,CAAEU,GAAI,GAAIG,KAAM,KAC7BT,GAAa,QAEZ,GAAIL,EAAW,CAChB,IAAMe,EAAe,CAAEJ,IAAI,IAAIK,MAAOC,UAAUC,WAAYJ,KAAMd,GAClEG,EAAS,GAAD,mBAAKD,GAAL,CAAYa,KACpBd,EAAa,CAAEU,GAAI,GAAIG,KAAM,OA0BrC,OAJAK,qBAAU,WACNC,aAAaC,QAAQ,QAASC,KAAKC,UAAUrB,MAC9C,CAACA,IAGA,mCACI,qBAAKsB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAKC,EAAKC,IAAI,aACnB,yEAEJ,sBAAKH,UAAU,aAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,2BAAiBC,MAAO9B,EAAUc,KAAMiB,SAAU,SAACC,GAAQ/B,EAAa+B,EAAEC,OAAOH,UAChH,+BAEQ1B,EAAY,mBAAGoB,UAAU,sBAAsBU,QAAS1B,IACpD,mBAAGgB,UAAU,sBAAsBU,QAAS1B,SAK5D,qBAAKgB,UAAU,aAAf,SAEQtB,EAAMO,KAAI,SAACC,GACP,OACI,sBAAKc,UAAU,YAAf,UACKd,EAAQI,KADb,IACmB,uBAAMU,UAAU,UAAhB,UACX,mBAAGA,UAAU,cAAcU,QAAS,kBAtC3D,SAACvB,GACd,IAAMwB,EAAajC,EAAMkC,MAAK,SAACC,GAC3B,OAAQ1B,IAAO0B,EAAQ1B,MAG3BJ,EAAgB4B,GAChBlC,EAAakC,GACb9B,GAAa,GA+BiEiC,CAAS5B,EAAQC,OAC3D,mBAAGa,UAAU,mBAAmBU,QAAS,kBA/C9D,SAACK,GAChB,IAAMC,EAAatC,EAAMuC,QAAO,SAACT,GAC7B,OAAQA,EAAErB,KAAO4B,KAGrBpC,EAASqC,GA0C0EE,CAAWhC,EAAQC,YAH1CD,EAAQC,SAUxD,qBAAKa,UAAU,aAAf,SACI,wBAAQA,UAAU,yBAAyBU,QAAS,kBAAM/B,EAAS,KAAnE,SAAwE,0DC9EjFwC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3654fac5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.856f5b96.png\";","import React, { useState, useEffect } from 'react';\nimport Img from './images/todo.png';\n\nconst Todo = () => {\n\n    const [inputData, setInputData] = useState(\"\");\n    const [items, setItems] = useState([]);\n    const [toggleBtn, setToggleBtn] = useState(true);\n    const [editItemData, setEditItemData] = useState(null);\n\n    const addItem = () => {\n        if (inputData && !toggleBtn) {\n\n            setItems(items.map((element) => {\n                if (element.id === editItemData.id) {\n                    console.log(inputData);\n                    return { ...element, name: inputData };\n                }\n                else {\n                    return element;\n                }\n            }));\n\n            setEditItemData(null);\n            setInputData({ id: \"\", name: \"\" });\n            setToggleBtn(true);\n        }\n        else if (inputData) {\n            const allInputData = { id: new Date().getTime().toString(), name: inputData };\n            setItems([...items, allInputData]);\n            setInputData({ id: \"\", name: \"\" });\n        }\n    }\n\n    const deleteItem = (index) => {\n        const updateitem = items.filter((e) => {\n            return (e.id !== index);\n        });\n\n        setItems(updateitem);\n    }\n\n    const editItem = (id) => {\n        const updateItem = items.find((current) => {\n            return (id === current.id);\n        });\n\n        setEditItemData(updateItem);\n        setInputData(updateItem);\n        setToggleBtn(false);\n    }\n\n    useEffect(() => {\n        localStorage.setItem('lists', JSON.stringify(items))\n    }, [items])\n\n    return (\n        <>\n            <div className=\"main_div\">\n                <div className=\"child_div\">\n                    <figure>\n                        <img src={Img} alt=\"todologo\" />\n                        <caption>Add Your List Here 👌</caption>\n                    </figure>\n                    <div className=\"input_item\">\n                        <input type=\"text\" placeholder=\"✍️ Add Item...\" value={inputData.name} onChange={(e) => { setInputData(e.target.value) }} />\n                        <span>\n                            {\n                                toggleBtn ? <i className=\"fas fa-plus btn-add\" onClick={addItem}></i> :\n                                    <i className=\"fas fa-edit btn-add\" onClick={addItem}></i>\n                            }\n\n                        </span>\n                    </div>\n                    <div className=\"show_items\">\n                        {\n                            items.map((element) => {\n                                return (\n                                    <div className=\"each_item\" key={element.id}>\n                                        {element.name} <span className=\"fa-icon\">\n                                            <i className=\"fas fa-edit\" onClick={() => editItem(element.id)}></i>\n                                            <i className=\"fas fa-trash-alt\" onClick={() => deleteItem(element.id)}></i></span>\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n\n                    <div className=\"show_items\">\n                        <button className=\"btn btn-md btn-primary\" onClick={() => setItems([])}><span>REMOVE ALL</span></button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst App = () => {\n  return (\n    <>\n      <Todo />\n    </>\n      );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}